---
layout: post
title: "glibc工具之-mtrace"
date: 2014-05-17 23:22
comments: true
categories: 
---

## 1. 功能
(1)  跟踪进程内存申请释放过程 <br>
(2)  检测内存泄露 <br>
(3)  检测内存重复释放，或野指针释放 <br>

## 2. 使用
### 2.1 进行代码修改
在所有malloc操作之前，初始化时调用 mtrace(); 进行初始化

### 2.2 添加环境变量
MALLOC_TRACE：表示输出日志的位置 <br>
(1) 设置全局环境变量 
	shell# export MALLOC_TRACE=output.txt
	shell# ./hello
(2) 加载时设置 
	shell# MALLOC_TRACE=output.txt ./hello
(3) 代码中设置
	#include <stdlib.h>
	setenv("MALLOC_TRACE", "output.txt", 1);

### 2.3 进行结果分析
shell# mtrace [binary] [output] <br>
binary为运行的可执行程序，output为环境变量指定的输出文件，输出最终检测的结果

## 3. 原理
### 3.1 glibc:mtrace()
代码中调用mtrace()初始化后 <br>
(1) 通过环境变量MALLOC_TRACE获取要输出的文件路径，打开文件句柄。 <br>
(2) 利用malloc_hook机制，hook替换为mtrace内部中的函数来跟踪内存申请释放动作，
但同时记录保存原有的hook，mtrace只跟踪内存申请释放操作并不替换申请释放内存的方法。 <br>
	  tr_old_free_hook = __free_hook;
	  __free_hook = tr_freehook;
	  tr_old_malloc_hook = __malloc_hook;
	  __malloc_hook = tr_mallochook;
(3) 在tr_mallochook中，调用原有的tr_old_malloc_hook或者直接调用malloc申请内存(没人注册hook)。
申请成功后，把申请到的指针、大小、调用函数记录到文件中 <br>
(4) 在tr_freehook中，调用原有的tr_old_free_hook或者直接调用free释放内存(没人注册hook)。
把释放的指针、调用函数记录到文件中 <br>
	
### 3.2 perl:mtrace
mtrace是一个perl脚本，对输出文件进行分析，输出可读报告 <br>
(1) 根据输出文件中的申请释放记录，建立一个hash集合，key为内存地址，value为是否被释放（申请时+1，释放时-1）。 <br>
最后遍历集合，输出未被释放的内存地址及对应的申请函数。 <br>
(2) 若可执行文件有符号表，则根据输出文件中的函数指针获取函数名进行输出，否则直接输出函数地址。 <br>
使用了addr2line操作通过函数地址获取函数位置。(addr2line -e $prog $searchaddr) <br>
addr2line是GNU Binutils工具集的一部分，可执行文件在目录/usr/bin下 <br>

## 4. 样例
(1) 测试源码
	mtrace();
	p = malloc(100);
	p = malloc(200);
	free(p);
	
(2) 查看输出文件
	root@c-desktop:~# cat output.txt
	= Start
	@ ./a.out:[0x804846e] + 0x8684378 0x64
	@ ./a.out:[0x804847e] + 0x86843e0 0xc8
	@ ./a.out:[0x804848e] - 0x86843e0
	
(3) 结果生成
	root@c-desktop:~# mtrace a.out output.txt

	Memory not freed:
	-----------------
	   Address     Size     Caller
	0x08684378     0x64  at /root/a.c:10

### 5. References
(1) glibc-2.9源码 <br>
(2) [http://man7.org/linux/man-pages/man3/mtrace.3.html](http://man7.org/linux/man-pages/man3/mtrace.3.html) <br>
(3) [http://linux.die.net/man/1/addr2line](http://linux.die.net/man/1/addr2line) <br>
(4) [http://www.gnu.org/software/binutils/](http://www.gnu.org/software/binutils/) <br>

Author: chenxiawei@gmail.com